name: 'Terraform Cloud Deploy'

on:
  push:
    branches: [ main ]
    paths:
      - 'workspace_cicd_snowflake/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'workspace_cicd_snowflake/**'

# Remove TF_CLI_ARGS as it's not supported in this Terraform version

jobs:
  check-terraform-changes:
    name: 'Check Terraform Changes'
    runs-on: ubuntu-latest
    outputs:
      terraform-changed: ${{ steps.changes.outputs.terraform }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check for Terraform changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          terraform:
            - 'workspace_cicd_snowflake/**/*.tf'
            - 'workspace_cicd_snowflake/**/*.tfvars'

  plan-and-validate:
    name: 'Plan and Validate'
    runs-on: ubuntu-latest
    needs: check-terraform-changes
    if: ${{ needs.check-terraform-changes.outputs.terraform-changed == 'true' }}
    environment: development

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.3
        terraform_cloud_token: ${{ secrets.TF_API_TOKEN }}
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Format Check
      id: fmt
      run: terraform fmt -check
      working-directory: workspace_cicd_snowflake
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: workspace_cicd_snowflake
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Validate
      id: validate
      run: terraform validate
      working-directory: workspace_cicd_snowflake

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -out=tfplan
      working-directory: workspace_cicd_snowflake
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
      continue-on-error: true

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      with:
        name: terraform-plan
        path: workspace_cicd_snowflake/tfplan
        retention-days: 1

  apply:
    name: 'Apply'
    runs-on: ubuntu-latest
    needs: [check-terraform-changes, plan-and-validate]
    if: ${{ needs.check-terraform-changes.outputs.terraform-changed == 'true' && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.3
        terraform_cloud_token: ${{ secrets.TF_API_TOKEN }}
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    - name: Download Plan Artifact
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan
        path: workspace_cicd_snowflake/

    - name: Terraform Init
      run: terraform init
      working-directory: workspace_cicd_snowflake
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      working-directory: workspace_cicd_snowflake
      env:
        TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}
